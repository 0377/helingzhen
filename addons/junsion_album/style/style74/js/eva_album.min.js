function EVA_Player_Cover(e, t) {
	this.max = 1, this.pos = 0, this.title = "加载中...", this.enough_to_display = !1, this.root = $node("wrapper_cover"), this.root.style.width = e + "px", this.root.style.height = t + "px", this.show = function(i, a, l) {
		function n(e) {
			e < u.length && ($node(u[e]).style.display = "block", $node(u[e]).className = "effect_fadeIn", window.setTimeout(function() {
				n(e + 1)
			}, 300))
		}
		this.root.className = "", this.enough_to_display = !1, $node("album_title").innerText = i, $node("wrapper_player_cover_bkgnd").style.height = "100%";
		var o = $node("wrapper_player_cover_bkgnd").getElementsByTagName("img")[0],
			s = e,
			c = t - 52,
			r = new Image;
		r.onload = function() {
			o.src = l;
			var e = calcImgClip(s, c, r.width, r.height);
			o.style.left = 0, o.style.top = 0, o.style.width = "100%", o.style.height = "100%";
		}, r.src = l, this.root.style.display = "block";
		var u = ["album_title"];
		n(0);
		var _ = this;
		window.setTimeout(function() {
			_.enough_to_display = !0
		}, 2500)
	}, this.setRange = function(e) {
		this.max = e, this.updateProgress(this.pos)
	}, this.updateProgress = function(e) {
		this.pos = e;
		var t = $node("div_player_loadingText").getElementsByTagName("span")[0];
		t.innerText = this.title + "(" + this.pos + "/" + this.max + ")", e == this.max && ($node("div_player_loadingText").style.display = "none")
	}, this.checkReadyToHide = function(e) {
		var t = this;
		1 == this.enough_to_display ? (this.root.addEventListener("webkitAnimationEnd", function() {
			t.root.style["pointer-events"] = "none"
		}, !1), this.root.className = "effect_fadeOut", e()) : setTimeout(function() {
			t.checkReadyToHide(e)
		}, 100)
	}, this.hide = function(e) {
		this.checkReadyToHide(e)
	}
}
function onEditBtnClk(e) {
	AlbumEditPageMgr.show(e.id), showEditorContent(!0), TTXP_DA.click("album.view.edit." + e.id)
}
function onCloseClk() {
	showEditorContent(!1), TTXP_DA.click("album.view.edit.close")
}
function onConfirmClk() {
	AlbumEditPageMgr.confirm(), showEditorContent(!1), TTXP_DA.click("album.view.edit.confirm")
}
function showEditorContent(e) {
	var t = document.getElementById("editor_content");
	1 == e ? (t.style.display = "block", t.className = "editor_content_show", $node("div_player").style["pointer-events"] = "none", $node("edit_album_title").value = g_album_info.title, myScroll.refresh(), $node("wraper_music").className = "effect_fadeOut") : (t.className = "editor_content_hide", $node("div_player").style["pointer-events"] = "auto", $node("div_player").style.display = "block", AlbumEditPageMgr.hide(), $node("wraper_music").className = "effect_fadeIn")
}
function modifyAlbum(action, value, callback) {
	log("trace", "modify album info:" + action + "|" + value);
	var __callback = callback,
		req = new XMLHttpRequest,
		url = "http://api.ttxuanpai.com/cgi-bin/modify_album";
	req.open("POST", url, !0), req.setRequestHeader("Content-type", "application/json");
	var data = {
		uid: getUID(),
		album_id: g_album_info.id,
		action: action,
		value: value
	};
	req.onreadystatechange = function() {
		if (4 == req.readyState) if (200 == req.status) {
			var result = eval("(" + req.responseText + ")");
			log("trace", "modify album info finished, ret:" + result.ret + ", msg:" + result.msg), __callback && (__callback(!0), __callback = null)
		} else(404 == req.status || 504 == req.status) && (console.log("request jsapi failed(404)"), QOS_Error("ModifyAlbum404"), __callback && (__callback(!1), __callback = null))
	}, req.send(JSON.stringify(data)), window.setTimeout(function() {
		__callback && (__callback(!1), __callback = null)
	}, 2e3)
}
function _checkTitle(e) {
	return g_album_info.title != e
}
function _checkModifyTitle(e) {
	var t = $node("edit_album_title");
	_checkTitle(t.value) ? (g_album_info.title = t.value, modifyAlbum("title", encodeURIComponent(g_album_info.title), function(t) {
		e(!0)
	})) : e(!1)
}
function _checkModifyShareDesc(e) {
	var t = $("#edit_album_share_desc").val();
	g_album_info.share_desc && t == g_album_info.share_desc ? e(!1) : (g_album_info.share_desc = t, modifyAlbum("share_desc", encodeURIComponent(t), function(t) {
		e(!0)
	}))
}
function onSaveTitle() {
	_checkModifyTitle(function(e) {
		_checkModifyShareDesc(function(t) {
			(e || t) && document.location.reload()
		})
	}), showEditorContent(!1)
}
function onTextContentShow(e) {
	e ? ($("#edit_album_title").val(g_album_info.title), $("#edit_album_share_desc").val("" == g_album_info.share_desc ? "让照片马上动起来!" : g_album_info.share_desc)) : _clearAlbumImageList()
}
function onSaveImage() {
	var e = [],
		t = $("#album_image_list").find(".album_image_thumb");
	t.each(function() {
		var t = {
			url: $(this).data("url"),
			type: "image",
			location: "url"
		};
		e.push(t)
	}), modifyAlbum("media_list", JSON.stringify(e), function(e) {
		document.location.reload()
	}), showEditorContent(!1)
}
function __album_image_list_size() {
	var e = document.body.scrollWidth,
		t = Math.floor((e - 20) / 3);
	return {
		width: t,
		height: Math.floor(4 * t / 3)
	}
}
function _clearAlbumImageList() {
	$node("album_image_list").innerHTML = ""
}
function _select_image() {
	wx.chooseImage({
		success: function(e) {
			TTXP_UI.LoadingToast.show("上传中(1/" + e.localIds.length + ")..."), TTXP_Create_WxImage_Uploader.upload(e.localIds, {
				progress: function(e) {
					TTXP_UI.LoadingToast.setText("上传中(" + (e.successed + e.failed) + "/" + e.total + ")..."), 1 == e.ret && (_insertAlbumImage(e.url, e.localId), myScroll.refresh())
				},
				completed: function() {
					TTXP_UI.LoadingToast.hide(), _recreate_sortable()
				}
			})
		}
	}), TTXP_DA.click("album.view.edit.image.add")
}
function _recreate_sortable() {
	null != __edit_content_sortable && __edit_content_sortable.destroy(), __edit_content_sortable = new Sortable($("#album_image_list")[0], {
		delay: 50,
		draggable: ".album_image_item",
		onStart: function(e) {
			myScroll.disable()
		},
		onEnd: function(e) {
			myScroll.enable()
		}
	})
}
function _reloadAlbumImageList() {
	if (void 0 != g_images) {
		_clearAlbumImageList();
		var e = document.createElement("li"),
			t = __album_image_list_size();
		$(e).html('<a class="ui_btn_add"></a>').width(t.width).height(t.height).click(_select_image), $("#album_image_list").append(e);
		for (var i = 0; i < g_images.length; ++i) _insertAlbumImage(g_images[i].src, g_images[i].src);
		_recreate_sortable()
	}
}
function onImageContentShow(e) {
	e ? _reloadAlbumImageList() : _clearAlbumImageList()
}
function __deleteAlbumImage() {
	var e = $(this).parent();
	TTXP_UI.MessageBox.show({
		title: "",
		message: "确定要删除图片吗?",
		ok: function() {
			e.remove()
		},
		cancel: function() {}
	}), TTXP_DA.click("album.view.edit.image.delete")
}
function _insertAlbumImage(e, t) {
	var i = '     <div class="album_image_thumb"></div><div class="img_delete"></div>',
		a = __album_image_list_size(),
		l = a.width,
		n = a.height,
		o = document.createElement("li");
	$(o).html(i).width(l).height(n).addClass("album_image_item");
	var s = $(o).find(".album_image_thumb");
	s.data("url", e);
	var c = new Image;
	c.onload = function() {
		s.css("background", "url(" + t + ") no-repeat").width(l).height(n).css("background-size", l + "px " + n + "px")
	}, c.src = t, $(o).find(".img_delete").click(__deleteAlbumImage), $("#album_image_list").append(o)
}
function onMusicContentShow(e) {
	e ? (_reloadAlbumMusicList(g_oMusicTags.getCurrentTag()), $node("music_tags").style.display = "none", $node("album_music_head").style.display = "block") : ($node("album_music_head").style.display = "none", resumeBkMusic(), _selMusicItem(lastSelMusicObj_, !1), lastSelMusicObj_ = null, _clearAlbumMusicList())
}
function _insertAlbumMusic(e) {
	var t = '     <a class="music_left"></a>     <div class="music_right">     <img class="music_loading"><div class="music_playing"></div>     </div>',
		i = document.getElementById("album_music_list"),
		a = document.createElement("li");
	a.innerHTML = t, a.setAttribute("music", e.url);
	var l = a.getElementsByClassName("music_left")[0];
	l.setAttribute("onclick", "onAlbumMusicClk(this.parentNode)"), l.innerText = i.getElementsByTagName("li").length + 1 + "  " + e.title, i.appendChild(a)
}
function _insertAlbumMusicTag(e, t) {
	var i = document.getElementById("album_music_tag_list"),
		a = document.createElement("li");
	a.innerText = e, a.setAttribute("tag", t), a.setAttribute("onclick", "onAlbumMusicTagClk(this)"), i.appendChild(a)
}
function onAlbumMusicSelect() {
	g_album_info.music = lastSelMusicObj_.getAttribute("music"), modifyAlbum("music", g_album_info.music, function(e) {
		document.location.reload()
	})
}
function _initAlbumMusicList() {
	if (void 0 != g_album_music_list && void 0 != g_album_music_tags) {
		for (var e = 0; e < g_album_music_tags.length; ++e) g_oMusicTags.push(g_album_music_tags[e].title, g_album_music_tags[e].title);
		g_oMusicTags.each(_insertAlbumMusicTag)
	}
}
function _clearAlbumMusicList() {
	lastSelMusicObj_ = null;
	var e = $node("album_music_list"),
		t = e.getElementsByTagName("audio")[0];
	for (t.src = "", t.pause();;) {
		var i = e.getElementsByTagName("li");
		if (i.length < 1) break;
		e.removeChild(i[0])
	}
}
function _reloadAlbumMusicList(e) {
	_clearAlbumMusicList();
	var t = $node("album_music_list");
	t.style.display = "block";
	for (var i = 0, a = 0; a < g_album_music_list.length; ++a) {
		var l = g_album_music_list[a];
		l.tag.indexOf(e) >= 0 && (i++, _insertAlbumMusic(l))
	}
	$node("album_music_head_cur_tag").innerText = e, g_oMusicTags.selectTag(e), myScroll.refresh()
}
function _selMusicItem(e, t) {
	if (null != e) {
		var i = e.getElementsByClassName("music_right")[0];
		t === !0 ? (i.style.display = "block", e.className = "music_item_hover") : (i.style.display = "none", e.className = "")
	}
}
function onAlbumMusicClk(e) {
	var t = $node("album_music_list").getElementsByTagName("audio")[0];
	if (lastSelMusicObj_ === e) t.src = "", t.pause(), _selMusicItem(e, !1), lastSelMusicObj_ = null;
	else {
		null != lastSelMusicObj_ && _selMusicItem(lastSelMusicObj_, !1), _selMusicItem(e, !0), lastSelMusicObj_ = e;
		var i = e.getElementsByClassName("music_right")[0].getElementsByTagName("img")[0],
			a = e.getAttribute("music"),
			l = e.getElementsByClassName("music_playing")[0];
		pauseBkMusic(), l.style.display = "none", i.style.display = "block", i.src = "http://cdn.ttxuanpai.com/images/loading.gif", $listen(t, "canplay", function() {
			i.style.display = "none", l.style.display = "block"
		}), t.src = a, t.play()
	}
}
function onShowHideMusicTagsSelect() {
	var e = $node("music_tags");
	"block" == e.style.display ? (e.style.display = "none", $node("album_music_list").style.display = "block") : (e.style.height = document.body.scrollHeight - 90 + "px", e.style.display = "block", $node("album_music_list").style.display = "none"), myScroll.refresh(), TTXP_DA.click("album.view.edit.music.chooseTag")
}
function onAlbumMusicTagClk(e) {
	var t = e.getAttribute("tag");
	console.log("select tag:" + t);
	for (var i = $node("album_music_tag_list").getElementsByTagName("li"), a = 0; a < i.length; ++a) i[a] == e ? i[a].className = "album_music_tag_list_selected" : i[a].className = "album_music_tag_list_normal";
	var l = $node("music_tags");
	l.style.display = "none", _reloadAlbumMusicList(t), TTXP_DA.click("album.view.edit.music.chooseTagItem")
}
function _clearAlbumTemplateList() {
	$node("album_template_list").innerHTML = ""
}
function _reloadAlbumTemplateList() {
	if (void 0 != g_album_template) {
		_clearAlbumTemplateList();
		for (var e = 0; e < g_album_template.length; ++e) _insertAlbumTemplate(g_album_template[e])
	}
}
function _insertAlbumTemplate(e) {
	var t = '     <div>     <img>     <div class="wrapper_edit_template_title"></div>     </div>',
		i = document.body.scrollWidth,
		a = Math.floor(.3 * i),
		l = Math.floor(256 * a / 200),
		n = document.getElementById("album_template_list"),
		o = document.createElement("li");
	o.innerHTML = t, o.style.width = a + "px", o.style.height = l + "px";
	var s = o.getElementsByTagName("img")[0];
	s.setAttribute("src", e.thumb_pic), s.setAttribute("album_template_id", e._id), s.setAttribute("onclick", "onAlbumTemplateClk(this)"), $(o).find(".wrapper_edit_template_title").text(e.name), n.appendChild(o)
}
function onTemplateContentShow(e) {
	e ? _reloadAlbumTemplateList() : _clearAlbumTemplateList()
}
function onAlbumTemplateClk(e) {
	for (var t = e.getAttribute("album_template_id"), i = 0; i < g_album_template.length; ++i) if (g_album_template[i]._id == t) {
		g_album_info.template.id = t, g_album_info.template = g_album_template[i], showEditorContent(!1), modifyAlbum("template", t, function(e) {
			document.location.reload()
		});
		break
	}
}
function is_template_valid(e, t) {
	if (null == e.apps || void 0 == e.apps || "" == e.apps) return !0;
	for (var i = e.apps.split(","), a = 0; a < i.length; ++a) if (t.toLocaleLowerCase() == i[a].toLocaleLowerCase()) return !0;
	return !1
}
function _getAlbumTemplates() {
	0 == g_album_template.length && loadJSFile("http://mp.ttxuanpai.com/static/album_template_list.js?t=" + parseInt(Date.now() / 3e5), function() {
		console.log("album template list successed");
		for (var e = 0; e < __xp_static_album_templates.data.length; ++e) {
			var t = __xp_static_album_templates.data[e];
			is_template_valid(t, TTXP.getBizId()) ? g_album_template.push(t) : console.log("template is not open for biz, id:" + t._id + ", biz:" + TTXP.getBizId())
		}
	}, function() {
		console.log("album template list failed!")
	})
}
function AlbumMusicTags() {
	var e = [],
		t = "";
	this.push = function(i, a) {
		for (var l = !1, n = 0; n < e.length; ++n) if (i == e[n][0]) {
			l = !0;
			break
		}
		if (!l) {
			var o = [i, a];
			e.push(o), "" == t && (t = a)
		}
	}, this.each = function(t) {
		for (var i = 0; i < e.length; ++i) t(e[i][0], e[i][1])
	}, this.selectTag = function(e) {
		t = e
	}, this.getCurrentTag = function() {
		return t
	}
}
function EVA_Player(player_div_id, maxWidth, maxHeight) {
	var __LOG_TAG__ = "TTXP_Album_Player",
		template_script_ready_ = !1,
		canvasWidth_ = maxWidth,
		canvasHeight_ = maxHeight,
		loadingImgCount_ = 0,
		player_canvas_id_ = player_div_id,
		real_playerCreator_ = "",
		realPlayerObj_ = null,
		loader_ = new EVA_Player_Cover(maxWidth, maxHeight),
		totalImgCount_ = 0,
		img_previewer;
	this.applyTemplate = function(e) {
		LOG.trace(__LOG_TAG__, "apply template(file:" + e.script + ", Obj:" + e.object + ")"), null != realPlayerObj_ && realPlayerObj_.stop();
		var t = document.getElementById(player_canvas_id_);
		t.innerHTML = "";
		var i = g_images[0].src;
		loader_.show(g_album_info.title, g_album_info.create_time, i), loader_.setRange(totalImgCount_), loader_.updateProgress(totalImgCount_ - loadingImgCount_), img_previewer = new ImagePreviewer(t, canvasWidth_, canvasHeight_), template_script_ready_ = !1, loadJSFile(e.script, function() {
			LOG.trace(__LOG_TAG__, "album template script loaded"), template_script_ready_ = !0
		}, function() {
			LOG.error(__LOG_TAG__, "load album template script failed!"), QOS_Error("LoadTemplateScriptFail")
		}), real_playerCreator_ = e.object
	}, this.setBkMusic = function(e, t) {
		// if (void 0 != e && "" != e) {
		// 	var i = document.getElementById("music_bkgnd");
		// 	i.src = e, i.load(), t === !0 && i.play()
		// }
	}, this.addMedia = function(e) {
		"url" == e.location ? (__addImgByUrl(e.url), TTXP.imgMgr.append({
			url: e.url
		})) : "serverId" == e.location && __addImgByServerId(e.url)
	}, this.previewImage = function(e) {
		img_previewer.preview(e, g_images)
	}, this.play = function() {
		LOG.trace(__LOG_TAG__, "play"), __checkIsReady(__realPlay)
	};
	var __addImgByUrl = function(e) {
			var t = new Image;
			totalImgCount_++, loadingImgCount_++, g_images.push(t), loadingImgCount_--, null != loader_ && loader_.updateProgress(totalImgCount_ - loadingImgCount_), t.onerror = function() {
				LOG.error(__LOG_TAG__, "Load image failed! url:" + t.src), QOS_Error("LoadAlbumImageFail")
			}, t.src = e
		},
		_onWxImgloaded = function(e, t, i) {
			if (LOG.trace(__LOG_TAG__, "wx img loaded, ret=" + e + ", id=" + t), loadingImgCount_--, 1 == e) {
				var a = new Image;
				a.src = i, g_images.push(a)
			}
			null != loader_ && loader_.updateProgress(totalImgCount_ - loadingImgCount_)
		},
		__addImgByServerId = function(e) {
			totalImgCount_++, loadingImgCount_++, wxAPI.downloadImage(e, _onWxImgloaded)
		},
		__createStage = function() {
			LOG.trace(__LOG_TAG__, "create stage");
			for (var album_info = {
				canvas_id: player_canvas_id_,
				max_width: canvasWidth_,
				max_height: canvasHeight_,
				title: g_album_info.title,
				music: g_album_info.music,
				create_time: g_album_info.create_time,
				images: []
			}, i = 0; i < g_images.length; ++i) album_info.images.push({
				src: g_images[i].src
			});
			var func_str = "realPlayerObj_ = new " + real_playerCreator_ + "(album_info);";
			try {
				eval(func_str)
			} catch (e) {
				// console.log("exception when create template, msg:" + e.message + ", desc:" + e.description)
			}
		},
		__realPlay = function() {
			// LOG.trace(__LOG_TAG__, "real begin play");
			// var e = document.getElementById("music_bkgnd"),
			// 	t = window.setInterval(function() {
			// 		if (4 == e.readyState) {
			// 			var i = document.getElementById("wraper_music");
			// 			i.style.display = "block", e.play(), window.clearInterval(t)
			// 		}
			// 	}, 100);
			// e.addEventListener("ended", function() {
			// 	e.load(), e.play()
			// }, !1), 
			realPlayerObj_.play()
			,
			  $(".editor_btn_section").each(function(e) {
				var t = this;
				window.setTimeout(function() {
					$(t).show()
				}, 10 + 100 * e)
			})
		},
		__checkIsReady = function(e) {
			0 == loadingImgCount_ && 1 == template_script_ready_ ? (LOG.trace(__LOG_TAG__, "Finished load images, begin play. Total:" + totalImgCount_ + ", Fail:" + (totalImgCount_ - g_images.length)), __createStage(), loader_.hide(e)) : window.setTimeout(function() {
				__checkIsReady(e)
			}, 100)
		}
}
function EVA_CSS_Loader(e, t, i, a) {
	var l, n, o, s = !1,
		c = !1,
		r = function() {
			1 != c && 1 != s && (s = !0, log("trace", "[CSSLoader]load " + e + " finished, ready to go!"), clearInterval(l), clearTimeout(n), o && void 0 != o && (o.parentNode.removeChild(o), o = void 0), t())
		},
		u = function() {
			1 != c && 1 != s && (c = !0, log("error", "[CSSLoader]load " + e + " failed!"), clearInterval(l), clearTimeout(n), o && void 0 != o && (o.parentNode.removeChild(o), o = void 0), i())
		},
		_ = function(e, t) {
			return e.currentStyle ? e.currentStyle[t] : e.ownerDocument.defaultView.getComputedStyle(e, null)[t]
		};
	this.load = function() {
		var t = document.createElement("link");
		t.rel = "stylesheet", t.type = "text/css", t.href = e, n = setTimeout(function() {
			log("error", "[CSSLoader]load " + e + " timeout.!"), u()
		}, 3e4), o = document.createElement("div"), o.id = a, document.body.appendChild(o), l = setInterval(function() {
			"none" === _(o, "display") && r()
		}, 50);
		var i = document.head || document.getElementsByTagName("head")[0];
		i.appendChild(t)
	}
}
function loadCSSFile(e, t, i, a) {
	var l = new EVA_CSS_Loader(e, t, i, a);
	l.load()
}
function preventTouch(e) {
	e.preventDefault()
}
function enableBodyTouch(e) {
	e ? $unlisten(document, "touchmove", preventTouch) : $listen(document, "touchmove", preventTouch)
}
function onDocReady() {
	traceTimeCost("doc ready");
	var e = document.body.scrollWidth,
		t = document.body.scrollHeight;
	$("#div_player").width(e).height(t),
	 $("#div_editor").height(t), $("#sec_content").height(t), 
	 TTXP.init(), 
	 TTXP_UI.LoadingToast.show("数据加载中...");
	var i = getUrlParams();
	getAlbumInfo(i.id, function(i, a, l) {
		if (traceTimeCost("getAlbumInfo"), 
			// console.log("res get album info"), 
			TTXP_UI.LoadingToast.hide(), i === !0) {
			// g_album_info = l, 0 == g_album_info.status ? _runEditMode() : _runPlayerMode(), 

		 // //    g_albumPlayer = new EVA_Player("div_player", e, t);
			// // for (var n = 0; n < g_album_info.media_list.length; ++n)
			// //  g_albumPlayer.addMedia(g_album_info.media_list[n]);
			// // g_albumPlayer.applyTemplate(g_album_info.template),
			// //  g_albumPlayer.setBkMusic(g_album_info.music, !1),
			// //   g_albumPlayer.play(), 
			//   document.title = g_album_info.title,
			//    weixin_share_api.setShareImg(g_album_info.media_list[0].url), 
			//    weixin_share_api.setAlbumTitle(g_album_info.title),
			//     g_album_info.share_desc && weixin_share_api.setShareDesc(g_album_info.share_desc), 
			//     wxAPI.init(!1, function(e) {
			// 	traceTimeCost("wx api ret"), 
			// 	console.log("wx ready, ret:" + e), 1 == e && wx.showOptionMenu(),
			// 	 weixin_share_api.init(!1);
			// }),
			//  traceTimeCost("play")
		} else $("#div_error").show(),
		 $("#txt_error_desc").text("抱歉，您所查看的炫拍可能已经被删除！"), 
		 QOS_Error("GetAlbumInfoFail")
	}, !1);
	var a = i.biz;
	void 0 != a && (TTXP.setBizId(a), jQuery.getScript("http://mp.ttxuanpai.com/static/biz_config.js?t=" + parseInt(Date.now() / 3e5)).done(function() {
		try {
			for (var e = null, t = 0; t < TTXP_BIZ_CONFIG.length; ++t) if (TTXP_BIZ_CONFIG[t].id == a) {
				e = TTXP_BIZ_CONFIG[t];
				break
			}
			if (null != e) {
				var i = e.follow_guide;
				weixin_share_api.setShareJump(i), $("#div_player_btn_more").attr("href", i)
				// ,
				//  console.log("set follow guide url:" + i)
			} else //console.log("biz id is not exist!biz:" + a),
			 QOS_Error("InvalidBiz_" + a)
		} catch (l) {}
	}).fail(function() {})), reportData("pageView", "eva_album.html")
}
function getAlbumInfo(e, t) {
	// console.log("get album info, uid=" + getUID() + ", album_id=" + e), $.ajax({
	// 	url: "http://api.ttxuanpai.com/cgi-bin/get_album_info",
	// 	type: "GET",
	// 	dataType: "json",
	// 	timeout: 5e3,
	// 	data: {
	// 		id: e,
	// 		uid: getUID()
	// 	},
	// 	error: function() {
	// 		t(!1, "出错啦，请稍后重试!", {})
	// 	},
	// 	success: function(i) {
				var a = g_album_info;
				a.title = decodeURIComponent(a.title),
				 a.share_desc = decodeURIComponent(a.share_desc ? a.share_desc : ""),
				 a.id = e, 
				 t(!0, "", a)
	// 	}
	// })
}

function _runPlayerMode() {
	var e = document.body.scrollWidth,
		t = document.getElementById("div_player_mask");
	t.style.width = e + "px", t.style.display = "block", $("#div_editor").remove()
}

function log(e, t) {
	console.log("[" + e + "]" + t)
}
function reportData(e, t) {
	
}
function traceTimeCost(e) {
	// var t = new Date;
	// console.log("[PERF]#" + e + ": " + (t.getTime() - __time_begin.getTime()) + "ms")
}
function ImagePreviewer(e, t, i) {
	function a() {
		console.log("close img viewer"), u.className = "img_viewer_hide", u.style["pointer-events"] = "none"
	}
	function l() {
		var e = o(_.width, _.height);
		n(e)
	}
	function n(e) {
		_.style.left = parseInt((t - e.width) / 2) + "px", _.style.top = parseInt((i - e.height) / 2) + "px", _.style.width = e.width + "px", _.style.height = e.height + "px"
	}
	function o(e, t) {
		var i = e,
			a = t,
			l = i,
			n = a;
		return (i > c || a > r) && (l = Math.floor(r * i / a), c >= l ? n = r : (n = Math.floor(a * c / i), l = c)), {
			width: l,
			height: n
		}
	}
	function s(e) {
		for (var t in g_images) if (g_images[t].src == e) return g_images[t];
		return null
	}
	var c = i > t ? t - 4 : t - 30,
		r = i > t ? i - 4 : i - 30,
		u = document.createElement("div");
	u.id = "img_viewer", u.style.width = t + "px", u.style.height = i + "px", u.innerHTML = '<img src="">', u.onclick = a;
	var _ = u.getElementsByTagName("img")[0];
	_.onload = l, e.appendChild(u), this.preview = function(e, t) {
		var i = s(e);
		console.log("preview image:" + i.src), u.style.display = "block", u.className = "img_viewer_show", u.style["pointer-events"] = "auto", _.src = i.src;
		var a = o(i.width, i.height);
		n(a)
	}
}
function EVA_JS_Loader(e, t, i) {
	this.load = function() {
		console.log("trace", "load js file:" + e);
		var a = document.createElement("script");
		a.setAttribute("type", "text/javascript"), a.setAttribute("src", e), a.onload = function() {
			console.log("Js File load successed"), t()
		}, a.onerror = function() {
			console.log("Js File load failed!"), i()
		};
		var l = document.head || document.getElementsByTagName("head")[0];
		l.appendChild(a)
	}
}
function loadJSFile(e, t, i) {
	var a = new EVA_JS_Loader(e, t, i);
	a.load()
}
var g_oMusicTags = new AlbumMusicTags,
	__edit_content_sortable = null,
	lastSelMusicObj_ = null,
	AlbumEditPageMgr = new function() {
		this.edit_pages = [], this.cur_page = null, this._getItem = function(e) {
			for (var t = 0; t < this.edit_pages.length; ++t) if (e == this.edit_pages[t].id) return this.edit_pages[t];
			return null
		}, this.push = function(e, t, i, a, l, n) {
			null == this._getItem(e) && (this.edit_pages.push({
				id: e,
				page: t,
				caption: i,
				height: a,
				callbackConfirm: l,
				callbackShow: n
			}), console.log("add edit item:" + e))
		}, this.show = function(e) {
			if (this.cur_page = this._getItem(e), null == this.cur_page) return void console.log("page is not exist!id:" + e);
			var t = document.body.scrollHeight,
				i = this.cur_page.height + 40,
				a = $node("editor_content");
			a.style.height = i + "px";
			var l = t - i;
			0 > l && (l = 0), a.style.top = l + "px", $node("editor_content_frm").style.height = this.cur_page.height + "px", $node("div_edit_scroll").style.height = this.cur_page.height + "px", $node("editor_content_titlebar").getElementsByTagName("div")[0].innerText = this.cur_page.caption;
			for (var n = 0, o = 0; o < this.edit_pages.length; ++o) {
				e == this.edit_pages[o].id && (n = o);
				var s = $node(this.edit_pages[o].page);
				this.edit_pages[o].callbackShow && this.edit_pages[o].callbackShow(!1), s.style.display = "none"
			}
			this.edit_pages[n].callbackShow && this.edit_pages[n].callbackShow(!0);
			var s = $node(this.edit_pages[n].page);
			s.style.display = "block"
		}, this.hide = function() {
			this.cur_page && (this.cur_page.callbackShow && this.cur_page.callbackShow(!1), this.cur_page = null)
		}, this.confirm = function() {
			this.cur_page && this.cur_page.callbackConfirm && this.cur_page.callbackConfirm()
		}
	},
	TTXP_Create_WxImage_Uploader = new function() {
		var e = 0,
			t = 0,
			i = 0,
			a = null;
		this.upload = function(o, s) {
			if (o) if (a = s, e = o.length, t = 0, i = 0, 0 == e) a && a.completed && a.completed({
				successed: t,
				failed: i,
				total: e
			});
			else for (var c = 0; e > c; c++) l(o[c], n)
		};
		var l = function(e, t) {
				wxAPI.uploadImage(e, function(e, i, a) {
					console.log("upload wx image ret:" + e + ",localId:" + i + ",serverId:" + a), 1 == e ? $.ajax({
						type: "POST",
						url: "http://api.ttxuanpai.com/cgi-bin/upload_image",
						data: JSON.stringify({
							uid: getUID(),
							serverId: a
						}),
						success: function(e, a) {
							console.log("res upload image, data:" + JSON.stringify(e)), "0" == e.ret ? t(!0, i, e.data.url) : (console.log("upload img failed! data:" + JSON.stringify(e)), t(!1, i, ""), QOS_Error("TTXP_View_UploadImage"))
						},
						dataType: "json"
					}) : (t(!1, i, ""), QOS_Error("TTXP_Create_WxUploadImage"))
				})
			},
			n = function(l, n, o) {
				1 == l ? t++ : i++, a && a.progress && a.progress({
					ret: l,
					localId: n,
					url: o,
					successed: t,
					failed: i,
					total: e
				}), t + i == e && a && a.completed && a.completed({
					successed: t,
					failed: i,
					total: e
				})
			}
	},
	g_images = [],
	g_albumPlayer, g_album_info, g_album_template = [],
	myScroll;
$(document).ready(function() {
	enableBodyTouch(1), onDocReady()
});
var TTXP = new function() {
		var e = "",
			t = 5,
			i = !1;
		this.init = function() {
			a()
		};
		var a = function() {
				$("#playendtips_replay").click(function() {
					$("#wrapper_play_end").hide(), TTXP_DA.click("album.view.play.endtip.replay")
				}), $("#playendtips_stop").click(function() {
					TTXP_DA.click("album.view.play.endtip.stop"), window.close(), wx.closeWindow()
				}), $("#playendtips_qrcode").click(function() {
					TTXP_DA.click("album.view.play.endtip.qrcode"), location.href = "follow_guide.html?__xp_from__=play_end"
				})
			},
			l = function() {
				$("#playendtips_replay").text("继续播放(" + t + "s)"), 0 == t ? $("#wrapper_play_end").hide() : (t--, window.setTimeout(l, 1e3))
			};
		this.showPlayEndTips = function() {
			$("#wrapper_play_end").show(), i = !0, t = 9, l()
		}, this.isPlayEndTipsShowed = function() {
			return i
		}, this.setBizId = function(t) {
			e = t
		}, this.getBizId = function() {
			return e
		}, this.imgMgr = new function() {
			var e = "TTXP_ImageMgr",
				t = [],
				i = 0;
			this.append = function(i) {
				LOG.trace(e, "append:" + i), i && i.url && i.url.length > 0 && t.push({
					url: i.url,
					desc: i.desc || ""
				})
			}, this.getNextImg = function() {
				return t.length < 1 ? null : t[i++ % t.length]
			}, this.isAllImgDisplayed = function() {
				return i > t.length
			}, this.getImgCount = function() {
				return t.length
			}, this.getDisplayedImgCount = function() {
				return i
			}, this.getImg = function(e) {
				return e < t.length ? t[e] : null
			}
		}
	}